#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import argparse              
import datetime
import pkg_resources
from gff3toembl import EMBLWriter

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser(description='Converts prokaryote GFF3 annotations to ' + \
                                                 'EMBL for ENA submission.')
                                                 
    #Â Required
    parser.add_argument('organism',          metavar='organism',         type=str, nargs=1, help='Organism')
    parser.add_argument('taxonid',           metavar='taxonid',          type=int, nargs=1, help='Taxon id')
    parser.add_argument('project_accession', metavar='project_accession',type=str, nargs=1, help='Accession number for the project')
    parser.add_argument('description',       metavar='description',      type=str, nargs=1, help='Genus species subspecies strain of organism')
    parser.add_argument('file',              metavar='file',             type=str, nargs=1, help='GFF3 filename')

    
    # Optional
    today = datetime.date.today().strftime('%d-%b-%Y')
    parser.add_argument('--authors',            '-i', help='Authors (in the EMBL RA line style)', default = 'Pathogen Informatics')
    parser.add_argument('--title',              '-m', help='Title of paper (in the EMBL RT line style)',default = 'Draft assembly annotated with Prokka')
    parser.add_argument('--publication',        '-p', help='Publication or journal name (in the EMBL RL line style)', default = 'Submitted (%s) to the INSDC' % today)
    parser.add_argument('--genome_type',        '-g', help='Genome type (linear/circular)', default = 'circular')
    parser.add_argument('--classification',     '-c', help='Classification (PROK/UNC/..)',  default = 'PROK')
    parser.add_argument('--output_filename',    '-f', help='Output filename',     default = 'output.embl')
    parser.add_argument('--locus_tag',          '-l', help='Overwrite the locus tag in the annotation file')
    parser.add_argument('--translation_table',  '-n', help='Translation table', default = 11)
    parser.add_argument('--chromosome_list',    '-d', help='Create a chromosome list file, and use the supplied name')
    parser.add_argument('--version',             action='version', version=str(pkg_resources.get_distribution("gff3toembl").version))
    
    args = parser.parse_args()
    emblwriter = EMBLWriter.EMBLWriter(args.file[0], args.organism[0], args.taxonid[0], args.project_accession[0], args.description[0], args.authors, args.title,  args.publication, args.genome_type, args.classification, args.output_filename, args.locus_tag, args.translation_table, args.chromosome_list )
    emblwriter.parse_and_run()

